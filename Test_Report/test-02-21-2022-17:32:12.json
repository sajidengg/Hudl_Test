{
  "stats": {
    "suites": 10,
    "tests": 44,
    "passes": 44,
    "pending": 0,
    "failures": 0,
    "start": "2022-02-21T17:32:12.760Z",
    "end": "2022-02-21T17:32:56.769Z",
    "duration": 44009,
    "testsRegistered": 44,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "288b042a-ae2c-45de-bd6f-168fb7d9e9b7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c962a0d-86a5-4064-aef9-821611d05388",
          "title": "Check the login test case with empty username in: chrome",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithEmptyUserName_TC_3.js",
          "file": "/Pages/LoginWithEmptyUserName_TC_3.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with empty username in: chrome\"",
              "fullTitle": "Check the login test case with empty username in: chrome \"before all\" hook: Intizaling driver in \"Check the login test case with empty username in: chrome\"",
              "timedOut": null,
              "duration": 7840,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "b0f739ca-5123-4c0a-80b6-87255e5ecea1",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with empty username in: chrome\"",
              "fullTitle": "Check the login test case with empty username in: chrome \"after all\" hook: Closed browser in \"Check the login test case with empty username in: chrome\"",
              "timedOut": null,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "d22fa7c1-ab1f-4dc5-ae1b-8154b78d8782",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with empty username in: chrome Enter User Name",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.EmptyUserName);",
              "err": {},
              "uuid": "a3eba2b8-acc6-4a3f-84f4-2996afde7560",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with empty username in: chrome Enter Password",
              "timedOut": null,
              "duration": 460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "e28a8b07-cd76-4432-8134-7bd4dd00ae04",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with empty username in: chrome Click on Login buttton",
              "timedOut": null,
              "duration": 3138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "416b155a-429c-41a0-8e03-9844533770e8",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check the login test case with empty username in: chrome verify the validation meessage",
              "timedOut": null,
              "duration": 3055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "8b27a265-abc6-4336-814c-f6b6e184f79a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3eba2b8-acc6-4a3f-84f4-2996afde7560",
            "e28a8b07-cd76-4432-8134-7bd4dd00ae04",
            "416b155a-429c-41a0-8e03-9844533770e8",
            "8b27a265-abc6-4336-814c-f6b6e184f79a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7057,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "812cd0ad-4a89-41b9-bfa6-8fe7f5db575a",
          "title": "Check the login test case with empty username in: firefox",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithEmptyUserName_TC_3.js",
          "file": "/Pages/LoginWithEmptyUserName_TC_3.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with empty username in: firefox\"",
              "fullTitle": "Check the login test case with empty username in: firefox \"before all\" hook: Intizaling driver in \"Check the login test case with empty username in: firefox\"",
              "timedOut": null,
              "duration": 6086,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "4ed38ed7-ee21-4521-964f-1b3e78e0151d",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with empty username in: firefox\"",
              "fullTitle": "Check the login test case with empty username in: firefox \"after all\" hook: Closed browser in \"Check the login test case with empty username in: firefox\"",
              "timedOut": null,
              "duration": 605,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "e0bbe70a-6a3e-43c5-922a-f26d2ed738ff",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with empty username in: firefox Enter User Name",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.EmptyUserName);",
              "err": {},
              "uuid": "93d586d0-01d1-467a-b86c-1ecfd55d2c2f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with empty username in: firefox Enter Password",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "bb7ee481-9206-4d25-bbee-e21220f97c6a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with empty username in: firefox Click on Login buttton",
              "timedOut": null,
              "duration": 3256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "a225c1cd-b6ef-4465-9f32-b64d8b044087",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check the login test case with empty username in: firefox verify the validation meessage",
              "timedOut": null,
              "duration": 3039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "1761d4f0-15e4-4587-af83-f14714d78dae",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93d586d0-01d1-467a-b86c-1ecfd55d2c2f",
            "bb7ee481-9206-4d25-bbee-e21220f97c6a",
            "a225c1cd-b6ef-4465-9f32-b64d8b044087",
            "1761d4f0-15e4-4587-af83-f14714d78dae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6449,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "99e45f98-bbe5-413d-8bdb-2e471bcc9711",
          "title": "Check the login test case with valid data in: chrome",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithValidData_TC_1.js",
          "file": "/Pages/LoginWithValidData_TC_1.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with valid data in: chrome\"",
              "fullTitle": "Check the login test case with valid data in: chrome \"before all\" hook: Intizaling driver in \"Check the login test case with valid data in: chrome\"",
              "timedOut": null,
              "duration": 7468,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "1efc89e6-3f21-45e9-bb5b-04ac66da48fd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with valid data in: chrome\"",
              "fullTitle": "Check the login test case with valid data in: chrome \"after all\" hook: Closed browser in \"Check the login test case with valid data in: chrome\"",
              "timedOut": null,
              "duration": 54,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "eda1bb8c-2e3f-4984-9a2c-fcdcc4d42df7",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with valid data in: chrome Enter User Name",
              "timedOut": null,
              "duration": 901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "92367b9a-25ef-4259-8ab0-8beb767bd21e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with valid data in: chrome Enter Password",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "6889a071-9ae9-4668-8824-799fd242c03f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with valid data in: chrome Click on Login buttton",
              "timedOut": null,
              "duration": 3202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "71ce914d-d864-44ce-adde-d6b9011fae31",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the title of page",
              "fullTitle": "Check the login test case with valid data in: chrome verify the title of page",
              "timedOut": null,
              "duration": 4301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet titleOfPage=await generic.GetTitle();\nawait expect(titleOfPage).to.equal(\"Home - Hudl\")",
              "err": {},
              "uuid": "f761d767-0f3c-4aa6-88b7-d8a4313ded5d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92367b9a-25ef-4259-8ab0-8beb767bd21e",
            "6889a071-9ae9-4668-8824-799fd242c03f",
            "71ce914d-d864-44ce-adde-d6b9011fae31",
            "f761d767-0f3c-4aa6-88b7-d8a4313ded5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8518,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "421a8f72-46c6-4db0-bdb5-50147992b217",
          "title": "Check the login test case with valid data in: firefox",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithValidData_TC_1.js",
          "file": "/Pages/LoginWithValidData_TC_1.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with valid data in: firefox\"",
              "fullTitle": "Check the login test case with valid data in: firefox \"before all\" hook: Intizaling driver in \"Check the login test case with valid data in: firefox\"",
              "timedOut": null,
              "duration": 5125,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "2abf5280-4354-4d31-a9c7-f7afe27a2901",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with valid data in: firefox\"",
              "fullTitle": "Check the login test case with valid data in: firefox \"after all\" hook: Closed browser in \"Check the login test case with valid data in: firefox\"",
              "timedOut": null,
              "duration": 593,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "ca173dec-0c2e-4dba-befa-530077f11b0a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with valid data in: firefox Enter User Name",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "ac1cddd7-b0b5-4d79-bd26-fd73d5fc5336",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with valid data in: firefox Enter Password",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "d97bd899-4953-4592-afee-7a0c78a703fc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with valid data in: firefox Click on Login buttton",
              "timedOut": null,
              "duration": 3261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "c55d1e67-3a52-419f-ba09-41cf30963831",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the title of page",
              "fullTitle": "Check the login test case with valid data in: firefox verify the title of page",
              "timedOut": null,
              "duration": 3012,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet titleOfPage=await generic.GetTitle();\nawait expect(titleOfPage).to.equal(\"Home - Hudl\")",
              "err": {},
              "uuid": "df0786f2-8431-4c05-bfad-3b34d2ead6f9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac1cddd7-b0b5-4d79-bd26-fd73d5fc5336",
            "d97bd899-4953-4592-afee-7a0c78a703fc",
            "c55d1e67-3a52-419f-ba09-41cf30963831",
            "df0786f2-8431-4c05-bfad-3b34d2ead6f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6442,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "67a0db0d-c9b2-4c3e-9508-ee35954127dc",
          "title": "Check thew login test case with invalid data in: chrome",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithInValidData_TC_2.js",
          "file": "/Pages/LoginWithInValidData_TC_2.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check thew login test case with invalid data in: chrome\"",
              "fullTitle": "Check thew login test case with invalid data in: chrome \"before all\" hook: Intizaling driver in \"Check thew login test case with invalid data in: chrome\"",
              "timedOut": null,
              "duration": 7529,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "650068ec-c4a1-4cd0-80e9-e8f6fcf28379",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check thew login test case with invalid data in: chrome\"",
              "fullTitle": "Check thew login test case with invalid data in: chrome \"after all\" hook: Closed browser in \"Check thew login test case with invalid data in: chrome\"",
              "timedOut": null,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "41af374a-602c-4854-9d0b-a38b42eed6a4",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check thew login test case with invalid data in: chrome Enter User Name",
              "timedOut": null,
              "duration": 866,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.InvalidUserName);",
              "err": {},
              "uuid": "78128861-95e1-4f63-870d-8434d07f89cc",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check thew login test case with invalid data in: chrome Enter Password",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.InvalidPassword);",
              "err": {},
              "uuid": "517e95e8-e498-4db8-acf2-20ddfc402f8c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check thew login test case with invalid data in: chrome Click on Login buttton",
              "timedOut": null,
              "duration": 3206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "a9b59b15-1825-4f11-b405-0f67ab8cf927",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check thew login test case with invalid data in: chrome verify the validation meessage",
              "timedOut": null,
              "duration": 3059,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "66886aee-c9fb-4bfb-9932-01ae0ad91b7c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78128861-95e1-4f63-870d-8434d07f89cc",
            "517e95e8-e498-4db8-acf2-20ddfc402f8c",
            "a9b59b15-1825-4f11-b405-0f67ab8cf927",
            "66886aee-c9fb-4bfb-9932-01ae0ad91b7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7237,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "21a21eec-1d8b-40e1-8aee-001b4ef80bf0",
          "title": "Check thew login test case with invalid data in: firefox",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithInValidData_TC_2.js",
          "file": "/Pages/LoginWithInValidData_TC_2.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check thew login test case with invalid data in: firefox\"",
              "fullTitle": "Check thew login test case with invalid data in: firefox \"before all\" hook: Intizaling driver in \"Check thew login test case with invalid data in: firefox\"",
              "timedOut": null,
              "duration": 6506,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "d9ab6438-2b11-41ff-9941-58652c96938a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check thew login test case with invalid data in: firefox\"",
              "fullTitle": "Check thew login test case with invalid data in: firefox \"after all\" hook: Closed browser in \"Check thew login test case with invalid data in: firefox\"",
              "timedOut": null,
              "duration": 488,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "71eaf1ae-b972-446b-8f43-be83f8b77a03",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check thew login test case with invalid data in: firefox Enter User Name",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.InvalidUserName);",
              "err": {},
              "uuid": "7af38f3f-55c8-4a02-a337-1cf9c7373804",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check thew login test case with invalid data in: firefox Enter Password",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.InvalidPassword);",
              "err": {},
              "uuid": "d8164421-4ac1-40a6-9aa2-6c0f0a07bf66",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check thew login test case with invalid data in: firefox Click on Login buttton",
              "timedOut": null,
              "duration": 3300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "78904d10-3fdf-4a16-ae3a-15908c4b19c6",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check thew login test case with invalid data in: firefox verify the validation meessage",
              "timedOut": null,
              "duration": 3036,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "8bb5965c-2452-4a54-a306-9cb03d72296e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7af38f3f-55c8-4a02-a337-1cf9c7373804",
            "d8164421-4ac1-40a6-9aa2-6c0f0a07bf66",
            "78904d10-3fdf-4a16-ae3a-15908c4b19c6",
            "8bb5965c-2452-4a54-a306-9cb03d72296e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6467,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "155efea2-3639-4dab-8602-7890d1a9457d",
          "title": "Check the login test case with empty password in :chrome",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithEmptyPassword_TC_4.js",
          "file": "/Pages/LoginWithEmptyPassword_TC_4.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with empty password in :chrome\"",
              "fullTitle": "Check the login test case with empty password in :chrome \"before all\" hook: Intizaling driver in \"Check the login test case with empty password in :chrome\"",
              "timedOut": null,
              "duration": 7488,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "2d7f451e-cae0-4127-bcb0-6850f7f2345e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with empty password in :chrome\"",
              "fullTitle": "Check the login test case with empty password in :chrome \"after all\" hook: Closed browser in \"Check the login test case with empty password in :chrome\"",
              "timedOut": null,
              "duration": 53,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "5d42a84c-0ecf-4abd-a05b-c46e9c6e959c",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with empty password in :chrome Enter User Name",
              "timedOut": null,
              "duration": 939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "9dc92b70-179d-41fb-868a-64d2b59ae17a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with empty password in :chrome Enter Password",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.EmptyPassword);",
              "err": {},
              "uuid": "4bc3d07f-9676-43c4-a83c-ea6472616836",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with empty password in :chrome Click on Login buttton",
              "timedOut": null,
              "duration": 3192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "7278ff6e-92e1-4d52-b7dc-53e810589ef2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check the login test case with empty password in :chrome verify the validation meessage",
              "timedOut": null,
              "duration": 3078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "71473818-3f4e-46b2-8ccb-878d07f0caf4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9dc92b70-179d-41fb-868a-64d2b59ae17a",
            "4bc3d07f-9676-43c4-a83c-ea6472616836",
            "7278ff6e-92e1-4d52-b7dc-53e810589ef2",
            "71473818-3f4e-46b2-8ccb-878d07f0caf4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7306,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "94ef2a24-3884-4879-acd1-4436e6da74d9",
          "title": "Check the login test case with empty password in :firefox",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithEmptyPassword_TC_4.js",
          "file": "/Pages/LoginWithEmptyPassword_TC_4.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the login test case with empty password in :firefox\"",
              "fullTitle": "Check the login test case with empty password in :firefox \"before all\" hook: Intizaling driver in \"Check the login test case with empty password in :firefox\"",
              "timedOut": null,
              "duration": 7282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\",browserType);",
              "err": {},
              "uuid": "ef9386ec-0c30-42d4-9ea2-b4c756315ade",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed browser in \"Check the login test case with empty password in :firefox\"",
              "fullTitle": "Check the login test case with empty password in :firefox \"after all\" hook: Closed browser in \"Check the login test case with empty password in :firefox\"",
              "timedOut": null,
              "duration": 492,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "542b1d6a-8610-4f8a-9df0-f78aaf4f77dd",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the login test case with empty password in :firefox Enter User Name",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "a5820ec1-1cd6-4530-9fb9-50a911488dc4",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the login test case with empty password in :firefox Enter Password",
              "timedOut": null,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.EmptyPassword);",
              "err": {},
              "uuid": "3b93a242-dd97-48a9-86c3-41f34d47bba7",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on Login buttton",
              "fullTitle": "Check the login test case with empty password in :firefox Click on Login buttton",
              "timedOut": null,
              "duration": 3233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "c3bf2b8b-c6de-4d3b-9e60-6f4585ac4500",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the validation meessage",
              "fullTitle": "Check the login test case with empty password in :firefox verify the validation meessage",
              "timedOut": null,
              "duration": 3024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet ValidationMessage=await generic.getTextOfElement(LoginObject.ErrorMessage);\nawait expect(ValidationMessage).to.equal(\"We didn't recognize that email and/or password. Need help?\")",
              "err": {},
              "uuid": "eb0250fa-34ef-40e5-8e8b-e78e9323914d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5820ec1-1cd6-4530-9fb9-50a911488dc4",
            "3b93a242-dd97-48a9-86c3-41f34d47bba7",
            "c3bf2b8b-c6de-4d3b-9e60-6f4585ac4500",
            "eb0250fa-34ef-40e5-8e8b-e78e9323914d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6333,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "ccf514fd-6700-49e5-86ff-cee2f5509be2",
          "title": "Check the rememebr-me label on the login page: chrome",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithRememberMe_Tc_5.js",
          "file": "/Pages/LoginWithRememberMe_Tc_5.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the rememebr-me label on the login page: chrome\"",
              "fullTitle": "Check the rememebr-me label on the login page: chrome \"before all\" hook: Intizaling driver in \"Check the rememebr-me label on the login page: chrome\"",
              "timedOut": null,
              "duration": 7609,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\", browserType);",
              "err": {},
              "uuid": "f763035b-7565-46ab-b809-8c696d323f6e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed the browser in \"Check the rememebr-me label on the login page: chrome\"",
              "fullTitle": "Check the rememebr-me label on the login page: chrome \"after all\" hook: Closed the browser in \"Check the rememebr-me label on the login page: chrome\"",
              "timedOut": null,
              "duration": 55,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "a9af257a-274b-468b-94c8-bd77723148cf",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the rememebr-me label on the login page: chrome Enter User Name",
              "timedOut": null,
              "duration": 833,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "000b9808-2d38-4a0b-a9f1-c959aee4cc2d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the rememebr-me label on the login page: chrome Enter Password",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "95c03b52-4af9-47fa-95e3-0df7a9927521",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the remeber-me label present or not",
              "fullTitle": "Check the rememebr-me label on the login page: chrome Check the remeber-me label present or not",
              "timedOut": null,
              "duration": 3030,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet rememberMeText = await generic.getTextOfElement(LoginObject.RememberMeLabel);\nawait expect(rememberMeText).to.equal(\"Remember me\");",
              "err": {},
              "uuid": "3900e6be-d5b6-4eb0-b45e-dc9b9fba4753",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the remember-me check box",
              "fullTitle": "Check the rememebr-me label on the login page: chrome Click on the remember-me check box",
              "timedOut": null,
              "duration": 3087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.RememberMeInputBox);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "96cec71d-acd3-48dc-8006-1c905083719c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the Login buttton",
              "fullTitle": "Check the rememebr-me label on the login page: chrome Click on the Login buttton",
              "timedOut": null,
              "duration": 3113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "e9d2415c-bacf-46d4-9c8f-012a53b78ec2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the title of page",
              "fullTitle": "Check the rememebr-me label on the login page: chrome verify the title of page",
              "timedOut": null,
              "duration": 9244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet titleOfPage = await generic.GetTitle();\nawait expect(titleOfPage).to.equal(\"Home - Hudl\")",
              "err": {},
              "uuid": "1599a05a-b53a-4e19-8162-a97e308a2d43",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "000b9808-2d38-4a0b-a9f1-c959aee4cc2d",
            "95c03b52-4af9-47fa-95e3-0df7a9927521",
            "3900e6be-d5b6-4eb0-b45e-dc9b9fba4753",
            "96cec71d-acd3-48dc-8006-1c905083719c",
            "e9d2415c-bacf-46d4-9c8f-012a53b78ec2",
            "1599a05a-b53a-4e19-8162-a97e308a2d43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19425,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "d8ab98a0-9ec3-4032-812d-7e8c4d434d67",
          "title": "Check the rememebr-me label on the login page: firefox",
          "fullFile": "/Users/sajidalisaiyed/Documents/Hudl_Test/Pages/LoginWithRememberMe_Tc_5.js",
          "file": "/Pages/LoginWithRememberMe_Tc_5.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Intizaling driver in \"Check the rememebr-me label on the login page: firefox\"",
              "fullTitle": "Check the rememebr-me label on the login page: firefox \"before all\" hook: Intizaling driver in \"Check the rememebr-me label on the login page: firefox\"",
              "timedOut": null,
              "duration": 3620,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.LaunchServer(\"https://www.hudl.com/login\", browserType);",
              "err": {},
              "uuid": "6f408457-e425-49b9-851c-8095d674076b",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: Closed the browser in \"Check the rememebr-me label on the login page: firefox\"",
              "fullTitle": "Check the rememebr-me label on the login page: firefox \"after all\" hook: Closed the browser in \"Check the rememebr-me label on the login page: firefox\"",
              "timedOut": null,
              "duration": 384,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await generic.ClosedServer();",
              "err": {},
              "uuid": "613b3971-df37-4a61-9c27-afb616c06a5a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Enter User Name",
              "fullTitle": "Check the rememebr-me label on the login page: firefox Enter User Name",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.UserName, LoginData.ValidUserName);",
              "err": {},
              "uuid": "db1be172-101a-4cd0-bea7-09c0e72d09fd",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter Password",
              "fullTitle": "Check the rememebr-me label on the login page: firefox Enter Password",
              "timedOut": null,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.SendData(LoginObject.Password, LoginData.ValidPassword);",
              "err": {},
              "uuid": "1b88b26a-9699-4343-9b38-b0d19ce00a34",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the remeber-me label present or not",
              "fullTitle": "Check the rememebr-me label on the login page: firefox Check the remeber-me label present or not",
              "timedOut": null,
              "duration": 3038,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet rememberMeText = await generic.getTextOfElement(LoginObject.RememberMeLabel);\nawait expect(rememberMeText).to.equal(\"Remember me\");",
              "err": {},
              "uuid": "c8a33fd3-b82a-4b60-acf9-98ab86d49652",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the remember-me check box",
              "fullTitle": "Check the rememebr-me label on the login page: firefox Click on the remember-me check box",
              "timedOut": null,
              "duration": 3239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.RememberMeInputBox);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "92258c33-4e77-493d-9de0-e69b4257ee9a",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Click on the Login buttton",
              "fullTitle": "Check the rememebr-me label on the login page: firefox Click on the Login buttton",
              "timedOut": null,
              "duration": 3257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.Click(LoginObject.LoginButton);\nawait generic.WaitForWhile();",
              "err": {},
              "uuid": "f968b471-2982-4999-9e74-16ab4d48bcdb",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify the title of page",
              "fullTitle": "Check the rememebr-me label on the login page: firefox verify the title of page",
              "timedOut": null,
              "duration": 3015,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await generic.WaitForWhile();\nlet titleOfPage = await generic.GetTitle();\nawait expect(titleOfPage).to.equal(\"Home - Hudl\")",
              "err": {},
              "uuid": "d129e3a6-9c8a-4462-a621-ba6f4d9af145",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db1be172-101a-4cd0-bea7-09c0e72d09fd",
            "1b88b26a-9699-4343-9b38-b0d19ce00a34",
            "c8a33fd3-b82a-4b60-acf9-98ab86d49652",
            "92258c33-4e77-493d-9de0-e69b4257ee9a",
            "f968b471-2982-4999-9e74-16ab4d48bcdb",
            "d129e3a6-9c8a-4462-a621-ba6f4d9af145"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12608,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-02-21-2022-17:32:12",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "Test_Report",
        "": true,
        "reportFilename": "test-02-21-2022-17:32:12"
      },
      "version": "6.0.1"
    }
  }
}